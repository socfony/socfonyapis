// 设置数据源
datasource database {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// 设置 JavaScript 生成器
generator client {
  provider = "prisma-client-js"
}

// 设置 Nexus Prisma 生成器
generator NexusPrisma {
  provider = "nexus-prisma"
}

/// 用户
model User {
  id        String   @id @database.Char(64) /// 用户 ID
  username  String   @unique @database.VarChar(128) /// 用户唯一名称
  createdAt DateTime @default(now()) /// 创建时间

  profile      UserProfile? /// 用户资料
  security     UserSecurity? /// 用户安全设置
  accessTokens AccessToken[] /// User access tokens
}

/// 用户资料
model UserProfile {
  userId    String    @id @database.Char(64) /// 用户 ID
  name      String?   @unique @database.VarChar(128) /// 唯一昵称
  bio       String?   @database.VarChar(512) /// 简介
  gender    Gender? /// 社会性别
  updatedAt DateTime? @default(now()) /// 更新时间

  user User @relation(fields: [userId], references: [id]) /// 用户

  @@index([gender])
}

/// 用户安全信息
model UserSecurity {
  userId        String   @id @database.Char(64) /// 用户 ID
  password      String?  @database.VarChar /// 密码
  phone         String?  @unique @database.VarChar(50) /// 手机号码
  phoneVerified Boolean? @default(false) /// 手机是否验证
  totpSceret    String?  @database.VarChar(128) /// TOTP 密钥

  user User @relation(fields: [userId], references: [id]) /// 用户
}

/// Access tokens
model AccessToken {
  id               String   @id @database.Char(64) /// Access token ID
  token            String   @unique @database.VarChar(128) /// Access token
  createdAt        DateTime @default(now()) /// Created at
  expiredAt        DateTime /// Expired at
  refreshExpiredAt DateTime /// Refresh expired at
  userId           String   @database.Char(64) /// User ID

  user User @relation(fields: [userId], references: [id]) /// User
}

/// 社会性别枚举
enum Gender {
  MALE /// 男性 
  FEMALE /// 女性
}
